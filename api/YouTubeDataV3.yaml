openapi: 3.1.0
info:
  title: YouTube Data API v3
  summary: YouTube Data API v3 was defined in the OpenAPI 3.1 specification.
  description: |-
    See. [YouTube Data API v3](https://developers.google.com/youtube/v3)
  version: 1.0.0
servers:
  - url: https://www.googleapis.com/youtube/v3
    description: Google API
tags:
  - name: Videos
    externalDocs:
      url: https://developers.google.com/youtube/v3/docs/videos
  - name: Captions
    externalDocs:
      url: https://developers.google.com/youtube/v3/docs/captions

paths:
  /videoCategories:
    get:
      tags:
        - Videos
      summary: Returns a list of categories that can be associated with YouTube videos.
      description: |-
        Quota impact: A call to this method has a quota cost of **1** unit.
        See. [VideoCategories:list](https://developers.google.com/youtube/v3/docs/videoCategories/list)
      operationId: videoCategoriesList
      parameters:
        - name: part
          description: The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`.
          in: query
          schema:
            type: string
            enum:
              - snippet
            examples:
              - snippet
          required: true
        - name: id
          description: The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.
          in: query
          schema:
            type: string
        - name: regionCode
          description: |-
            The regionCode parameter instructs the API to return the list of video categories available in the specified country.
            The parameter value is an ISO 3166-1 alpha-2 country code.
          in: query
          schema:
            type: string
          examples:
            JP:
              summary: Japan
              value: JP
        - name: hl
          description: |-
            The hl parameter specifies the language that should be used for text values in the API response.
            The default value is `en_US`.
          in: query
          schema:
            type: string
          examples:
            ja_JP:
              summary: Japanese
              value: ja_JP
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoCategoryList"
        "404":
          description: |-
            `videoCategoryNotFound` - The video category identified by the `id` parameter cannot be found.
            Use the `videoCategories.list` method to retrieve a list of valid values.
          content:
            application/json:
              schema:
                type: object
      security:
        - ApiKey: []

  /videos:
    get:
      tags:
        - Videos
      summary: Returns a list of videos that match the API request parameters.
      description: |-
        Quota impact: A call to this method has a quota cost of **1** unit.
        See. [Videos:list](https://developers.google.com/youtube/v3/docs/videos/list)
      operationId: videosList
      parameters:
        - name: part
          description: |-
            he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.
            If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties.
            The following list contains the part names that you can include in the parameter value.
            - `contentDetails`
            - `fileDetails`
            - `id`
            - `liveStreamingDetails`
            - `localizations`
            - `player`
            - `processingDetails`
            - `recordingDetails`
            - `snippet`
            - `statistics`
            - `status`
            - `suggestions`
            - `topicDetails`
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - contentDetails
                - fileDetails
                - id
                - liveStreamingDetails
                - localizations
                - player
                - processingDetails
                - recordingDetails
                - snippet
                - statistics
                - status
                - suggestions
                - topicDetails
          required: true
        - name: chart
          description: |-
            The chart parameter identifies the chart that you want to retrieve.
            Acceptable values are
            - `mostPopular` - Return the most popular videos for the specified content region and video category.
          in: query
          schema:
            type: string
            enum:
              - mostPopular
        - name: id
          description: |-
            The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved.
            In a video resource, the id property specifies the video's ID.
          in: query
          schema:
            type: string
        - name: hl
          description: |-
            The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports.
            The parameter value must be a language code included in the list returned by the i18nLanguages.list method.
            If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values.
            However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
          in: query
          schema:
            type: string
        - name: maxHeight
          description: |-
            The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property.
            You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout.
            If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width.
            Acceptable values are `72` to `8192`, inclusive.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 72
            maximum: 8192
          examples:
            FHD:
              summary: Full HD
              value: 1080
            4K:
              summary: 4K
              value: 2160
        - name: maxResults
          description: |-
            The maxResults parameter specifies the maximum number of items that should be returned in the result set.
            This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
            Acceptable values are `1` to `50`, inclusive. The default value is **5**.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
          examples:
            default:
              summary: default
              value: 5
        - name: maxWidth
          description: |-
            The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property.
            You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout.
            If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height.
            Acceptable values are `72` to `8192`, inclusive.
          in: query
          schema:
            type: integer
            format: int32
            minimum: 72
            maximum: 8192
          examples:
            FHD:
              summary: Full HD
              value: 1920
            4K:
              summary: 4K
              value: 3840
        - name: pageToken
          description: |-
            The pageToken parameter identifies a specific page in the result set that should be returned.
            In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.
            This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
          in: query
          schema:
            type: string
        - name: regionCode
          description: |-
            The regionCode parameter instructs the API to select a video chart available in the specified region.
            This parameter can only be used in conjunction with the `chart` parameter.
            The parameter value is an ISO 3166-1 alpha-2 country code.
          in: query
          schema:
            type: string
          examples:
            JP:
              summary: Japan
              value: JP
        - name: videoCategoryId
          description: |-
            The videoCategoryId parameter identifies the video category for which the chart should be retrieved.
            This parameter can only be used in conjunction with the chart parameter.
            By default, charts are not restricted to a particular category. The default value is **0**.
          in: query
          schema:
            type: string
          examples:
            default:
              summary: default
              value: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoList"
        "400":
          description: |-
            `videoChartNotFound` - The requested video chart is not supported or is not available.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: |-
            `forbidden` - The request is not properly authorized to access video file or processing information.
            Note that the `fileDetails`, `processingDetails`, and `suggestions` parts are only available to that video's owner.
            Or, the request cannot access user rating information.
            This error may occur because the request is not properly authorized to use the `myRating` parameter.
        "404":
          description: |-
            `videoNotFound` - The video that you are trying to retrieve cannot be found.
            Check the value of the request's `id` parameter to ensure that it is correct.
          content:
            application/json:
              schema:
                type: object
      security:
        - ApiKey: []

  /captions:
    get:
      tags:
        - Captions
      summary: Returns a list of caption tracks associated with a given video.
      description: |-
        Quota impact: A call to this method has a quota cost of **50** units.
        See. [Captions:list](https://developers.google.com/youtube/v3/docs/captions/list)
      operationId: captionsList
      parameters:
        - name: part
          description: The part parameter specifies the caption resource parts that the API response will include.
          in: query
          schema:
            type: string
            enum:
              - id
              - snippet
          required: true
        - name: videoId
          description: The videoId parameter specifies the YouTube video ID of the video for which the API should return caption tracks.
          in: query
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaptionList"
        "403":
          description: |-
            `forbidden` - One or more caption tracks could not be retrieved because the permissions associated with the request are not sufficient to retrieve the requested resources.
            The request might not be properly authorized.
          content:
            application/json:
              schema:
                type: object
        "404":
          description: |-
            `captionNotFound` - One or more of the specified caption tracks could not be found.
            This error occurs if the `videoId` parameter identifies an actual video, but the `id` parameter either identifies caption track IDs that do not exist or track IDs that are associated with other videos.
            Check the values of the request's `id` and `videoId` parameters to ensure that they are correct.
          content:
            application/json:
              schema:
                type: object
      security:
        - ApiKey: []

  /captions/{id}:
    get:
      tags:
        - Captions
      summary: Downloads a caption track.
      description: |-
        The caption track is returned in its original format unless the request specifies a value for the `tfmt` parameter and in its original language unless the request specifies a value for the `tlang` parameter.
        Quota impact: A call to this method has a quota cost of **200** units.
        See. [Captions: download](https://developers.google.com/youtube/v3/docs/captions/download)
      operationId: captionsDownload
      parameters:
        - name: id
          description: |-
            The id parameter identifies the caption track that is being retrieved.
            The value is a caption track ID as identified by the id property in a caption resource.
          in: path
          schema:
            type: string
          examples:
            abcdefg:
              summary: alphabet
              value: abcdefg
          required: true
        - name: tfmt
          description: |-
            The tfmt parameter specifies that the caption track should be returned in a specific format.
            If the parameter is not included in the request, the track is returned in its original format.
            Supported values are
            - `sbv` - SubViewer subtitle
            - `scc` - Scenarist Closed Caption format
            - `srt` - SubRip subtitle
            - `ttml` - Timed Text Markup Language caption
            - `vtt` - Web Video Text Tracks caption
          in: query
          schema:
            type: string
            enum:
              - sbv
              - scc
              - srt
              - ttml
              - vtt
        - name: tlang
          description: |-
            The tlang parameter specifies that the API response should return a translation of the specified caption track.
            The parameter value is an ISO 639-1 two-letter language code that identifies the desired caption language.
            The translation is generated by using machine translation, such as Google Translate.
          in: query
          schema:
            type: string
          examples:
            ja:
              summary: Japanese
              value: ja
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: |-
            `couldNotConvert` - The caption track data could not be converted to the requested language and/or format.
            Ensure that the requested tfmt and tlang values are valid, and that the snippet.status of the requested caption track is not failed.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: |-
            `forbidden` - The permissions associated with the request are not sufficient to download the caption track.
            The request might not be properly authorized, or the video order might not have enabled third-party contributions for this caption.
          content:
            application/json:
              schema:
                type: object
        "404":
          description: |-
            `captionNotFound` - The caption track could not be found.
            Check the value of the request's id parameter to ensure that it is correct.
          content:
            application/json:
              schema:
                type: object
      security:
        - ApiKey: []

components:
  schemas:
    VideoCategoryList:
      type: object
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#videoCategoryListResponse`.
          examples:
            - youtube#videoCategoryListResponse
        etag:
          type: string
          description: The Etag of this resource.
        nextPageToken:
          type: string
          description: The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set.
        prevPageToken:
          type: string
          description: The token that can be used as the value of the `pageToken` parameter to retrieve the previous page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        items:
          type: array
          description: A list of video categories that can be associated with YouTube videos.
          items:
            $ref: '#/components/schemas/VideoCategory'
      required:
        - kind
        - etag
        - items
    VideoCategory:
      type: object
      description: |-
        A videoCategory resource identifies a category that has been or could be associated with uploaded videos.
        See. [VideoCategories](https://developers.google.com/youtube/v3/docs/videoCategories#resource)
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#videoCategory`.
          examples:
            - youtube#videoCategory
        etag:
          type: string
          description: The Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the video category.
        snippet:
          $ref: '#/components/schemas/VideoCategorySnippet'
    VideoCategorySnippet:
      type: object
      properties:
        channelId:
          type: string
          description: The YouTube channel that created the video category.
        title:
          type: string
          description: The video category's title.
        assignable:
          type: boolean
          description: |-
            Indicates whether videos can be associated with the category.
            If you set this value to `false`, then YouTube does not display the category in video metadata that it returns for searches.

    VideoList:
      type: object
      description: The response from the YouTube API that contains the list of videos.
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#videoListResponse`.
          examples:
            - youtube#videoListResponse
        etag:
          type: string
          description: The Etag of this resource.
        nextPageToken:
          type: string
          description: The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set.
        prevPageToken:
          type: string
          description: The token that can be used as the value of the `pageToken` parameter to retrieve the previous page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        items:
          type: array
          description: A list of videos that match the request criteria.
          items:
            $ref: '#/components/schemas/Video'
      required:
        - kind
        - etag
        - items
    PageInfo:
      type: object
      description: The pageInfo object encapsulates paging information for the result set.
      properties:
        totalResults:
          type: integer
          description: The total number of results in the result set.
        resultsPerPage:
          type: integer
          description: The number of results included in the API response.
    Video:
      type: object
      description: |-
        A video resource represents a YouTube video.
        See. [Videos](https://developers.google.com/youtube/v3/docs/videos#resource)
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#video`.
          examples:
            - youtube#video
        etag:
          type: string
          description: The Etag of this resource.
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the video.
        snippet:
          $ref: '#/components/schemas/Snippet'
        contentDetails:
          $ref: '#/components/schemas/ContentDetails'
        status:
          $ref: '#/components/schemas/Status'
        statistics:
          $ref: '#/components/schemas/Statistics'
        player:
          $ref: '#/components/schemas/Player'
        topicDetails:
          $ref: '#/components/schemas/TopicDetails'
        recordingDetails:
          $ref: '#/components/schemas/RecordingDetails'
        fileDetails:
          $ref: '#/components/schemas/FileDetails'
        processingDetails:
          $ref: '#/components/schemas/ProcessingDetails'
        suggestions:
          $ref: '#/components/schemas/Suggestions'
        liveStreamingDetails:
          $ref: '#/components/schemas/LiveStreamingDetails'
        localizations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Localization'
      required:
        - kind
        - etag
        - id
        - snippet
    Snippet:
      type: object
      description: The snippet object contains basic details about the video, such as its title, description, and category.
      properties:
        publishedAt:
          type: string
          format: date-time
          description: |-
            The date and time that the video was published.
            Note that this time might be different than the time that the video was uploaded.
            For example, if a video is uploaded as a private video and then made public at a later time, this property will specify the time that the video was made public.
            There are a couple of special cases:
            - If a video is uploaded as a private video and the video metadata is retrieved by the channel owner, then the property value specifies the date and time that the video was uploaded.
            - If a video is uploaded as an unlisted video, the property value also specifies the date and time that the video was uploaded. In this case, anyone who knows the video's unique video ID can retrieve the video metadata.
            The value is specified in ISO 8601 format.
        channelId:
          type: string
          description: The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.
        title:
          type: string
          description: |-
            The video's title.
            The property value has a maximum length of 100 characters and may contain all valid UTF-8 characters except < and >.
            You must set a value for this property if you call the videos.update method and are updating the snippet part of a video resource.
        description:
          type: string
          description: The video's description. The property value has a maximum length of 5000 bytes and may contain all valid UTF-8 characters except < and >.
        thumbnails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Thumbnail'
        channelTitle:
          type: string
          description: The title of the channel that the video belongs to.
        tags:
          type: array
          description: |-
            A list of keyword tags associated with the video.
            Tags may contain spaces.
            The property value has a maximum length of 500 characters.
            Note the following rules regarding the way the character limit is calculated:
            - The property value is a list, and commas between items in the list count toward the limit.
            - If a tag contains a space, the API server handles the tag value as though it were wrapped in quotation marks, and the quotation marks count toward the character limit.
          items:
            type: string
        categoryId:
          type: string
          description: The YouTube video category associated with the video. You must set a value for this property if you call the `videos.update` method and are updating the snippet part of a video resource.
        liveBroadcastContent:
          type: string
          description: |-
            Indicates if the video is an upcoming/active live broadcast. Or it's "none" if the video is not an upcoming/active live broadcast.
            Valid values for this property are:
            - `live`
            - `none`
            - `upcoming`
          examples:
            - live
            - none
            - upcoming
        defaultLanguage:
          type: string
          description: The language of the text in the video resource's `snippet.title` and `snippet.description` properties.
        localized:
          $ref: '#/components/schemas/Localized'
        defaultAudioLanguage:
          type: string
          description: The `default_audio_language` property specifies the language spoken in the video's default audio track.
      required:
        - publishedAt
        - channelId
        - title
        - description
        - thumbnails
        - channelTitle
    Thumbnail:
      type: object
      description: |-
        A map of thumbnail images associated with the video.
        For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.
      properties:
        url:
          type: string
          description: The URL of the thumbnail image.
        width:
          type: integer
          description: The width of the thumbnail image in pixels.
        height:
          type: integer
          description: The height of the thumbnail image in pixels.
      required:
        - url
    Localized:
      type: object
      description: |-
        The `snippet.localized` object contains either a localized title and description for the video or the title in the default language for the video's metadata.
        - Localized text is returned in the resource snippet if the `videos.list` request used the hl parameter to specify a language for which localized text should be returned and localized text is available in that language.
        - Metadata for the default language is returned if an hl parameter value is not specified or a value is specified but localized metadata is not available for the specified language.
        The property contains a read-only value. Use the `localizations` object to add, update, or delete localized titles.
      properties:
        title:
          type: string
          description: The localized video title.
        description:
          type: string
          description: The localized video description.
    ContentDetails:
      type: object
      description: The contentDetails object contains information about the video content, including the length of the video and an indication of whether captions are available for the video.
      properties:
        duration:
          type: string
          description: |-
              The length of the video.
              The property value is an ISO 8601 duration.
              For example, for a video that is at least one minute long and less than one hour long, the duration is in the format `PT#M#S`, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively.
              The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video.
              For example, a value of `PT15M33S` indicates that the video is 15 minutes and 33 seconds long.
              If the video is at least one hour long, the duration is in the format PT#H#M#S, in which the # preceding the letter H specifies the length of the video in hours and all of the other details are the same as described above.
              If the video is at least one day long, the letters P and T are separated, and the value's format is P#DT#H#M#S. Please refer to the ISO 8601 specification for complete details.
        dimension:
          type: string
          description: Indicates whether the video is available in 3D or in 2D.
        definition:
          type: string
          description: |-
            Indicates whether the video is available in high definition (HD) or only in standard definition.
            Valid values for this property are:
            - `hd`
            - `sd`
          examples:
            - hd
            - sd
        caption:
          type: string
          description: |-
            Indicates whether captions are available for the video.
            Valid values for this property are:
            - `false`
            - `true`
          examples:
            - "false"
            - "true"
        licensedContent:
          type: boolean
          description: Indicates whether the video represents licensed content, which means that the content was uploaded to a channel linked to a YouTube content partner and then claimed by that partner.
        regionRestriction:
          type: object
          description: |-
            The `regionRestriction` object contains information about the countries where a video is (or is not) viewable.
            The object will contain either the `contentDetails.regionRestriction.allowed` property or the `contentDetails.regionRestriction.blocked` property.
          properties:
            allowed:
              type: array
              description: |-
                A list of region codes that identify countries where the video is viewable.
                If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country.
                If this property is present and contains an empty list, the video is blocked in all countries.
              items:
                type: string
            blocked:
              type: array
              description: |-
                A list of region codes that identify countries where the video is blocked.
                If this property is present and a country is not listed in its value, then the video is viewable in that country.
                If this property is present and contains an empty list, the video is viewable in all countries.
              items:
                type: string
        contentRating:
          $ref: '#/components/schemas/ContentRating'
        projection:
          type: string
          description: |-
            Specifies the projection format of the video.
            Valid values for this property are:
            - `360`
            - `rectangular`
        hasCustomThumbnail:
          type: boolean
          description: |-
            Indicates whether the video uploader has provided a custom thumbnail image for the video.
            This property is only visible to the video uploader.
    ContentRating:
      type: object
      description: Specifies the ratings that the video received under various rating schemes.
      properties:
        acbRating:
          type: string
          description: The ACB rating of the content.
        agcomRating:
          type: string
          description: The AGCOM rating of the content.
        anatelRating:
          type: string
          description: The Anatel rating of the content.
        bbfcRating:
          type: string
          description: The BBFC rating of the content.
        bfvcRating:
          type: string
          description: The BFVC rating of the content.
        bmukkRating:
          type: string
          description: The BMUKK rating of the content.
        catvRating:
          type: string
          description: The CATV rating of the content.
        catvfrRating:
          type: string
          description: The CATVFR rating of the content.
        cbfcRating:
          type: string
          description: The CBFC rating of the content.
        cccRating:
          type: string
          description: The CCC rating of the content.
        cceRating:
          type: string
          description: The CCE rating of the content.
        chfilmRating:
          type: string
          description: The CHFilm rating of the content.
        chvrsRating:
          type: string
          description: The CHVRS rating of the content.
        cicfRating:
          type: string
          description: The CICF rating of the content.
        cnaRating:
          type: string
          description: The CNA rating of the content.
        cncRating:
          type: string
          description: The CNC rating of the content.
        csaRating:
          type: string
          description: The CSA rating of the content.
        cscfRating:
          type: string
          description: The CSCF rating of the content.
        czfilmRating:
          type: string
          description: The CZFilm rating of the content.
        djctqRating:
          type: string
          description: The DJCTQ rating of the content.
        djctqRatingReasons:
          type: array
          items:
            type: string
          description: The DJCTQ rating reasons of the content.
        ecbmctRating:
          type: string
          description: The ECBMCT rating of the content.
        eefilmRating:
          type: string
          description: The EEFilm rating of the content.
        egfilmRating:
          type: string
          description: The EGFilm rating of the content.
        eirinRating:
          type: string
          description: The EIRIN rating of the content.
        fcbmRating:
          type: string
          description: The FCBM rating of the content.
        fcoRating:
          type: string
          description: The FCO rating of the content.
        fmocRating:
          type: string
          description: |-
            The FMOC rating of the content.
            This property has been deprecated as of November 2, 2015. Use the `contentDetails.contentRating.cncRating` property instead.
        fpbRating:
          type: string
          description: The FPB rating of the content.
        fpbRatingReasons:
          type: array
          items:
            type: string
          description: The FPB rating reasons of the content.
        fskRating:
          type: string
          description: The FSK rating of the content.
        grfilmRating:
          type: string
          description: The GRFilm rating of the content.
        icaaRating:
          type: string
          description: The ICAA rating of the content.
        ifcoRating:
          type: string
          description: The IFCo rating of the content.
        ilfilmRating:
          type: string
          description: The ILFilm rating of the content.
        incaaRating:
          type: string
          description: The INCAA rating of the content.
        kfcbRating:
          type: string
          description: The KFCB rating of the content.
        kijkwijzerRating:
          type: string
          description: The Kijkwijzer rating of the content.
        kmrbRating:
          type: string
          description: The KMRB rating of the content.
        lsfRating:
          type: string
          description: The LSF rating of the content.
        mccaaRating:
          type: string
          description: The MCCAA rating of the content.
        mccypRating:
          type: string
          description: The MCCYP rating of the content.
        mcstRating:
          type: string
          description: The MCST rating of the content.
        mdaRating:
          type: string
          description: The MDA rating of the content.
        medietilsynetRating:
          type: string
          description: The Medietilsynet rating of the content.
        mekuRating:
          type: string
          description: The MEKU rating of the content.
        mibacRating:
          type: string
          description: The MIBAC rating of the content.
        mocRating:
          type: string
          description: The MOC rating of the content.
        moctwRating:
          type: string
          description: The MOCTW rating of the content.
        mpaaRating:
          type: string
          description: The MPAA rating of the content.
        mpaatRating:
          type: string
          description: The MPAAT rating of the content.
        mtrcbRating:
          type: string
          description: The MTRCB rating of the content.
        nbcRating:
          type: string
          description: The NBC rating of the content.
        nbcplRating:
          type: string
          description: The NBCPL rating of the content.
        nfrcRating:
          type: string
          description: The NFRC rating of the content.
        nfvcbRating:
          type: string
          description: The NFVCB rating of the content.
        nkclvRating:
          type: string
          description: The NKCLV rating of the content.
        oflcRating:
          type: string
          description: The OFLC rating of the content.
        pefilmRating:
          type: string
          description: The PEFilm rating of the content.
        rcnofRating:
          type: string
          description: The RCNOF rating of the content.
        resorteviolenciaRating:
          type: string
          description: The RESORTEVIOLÊNCIA rating of the content.
        rtcRating:
          type: string
          description: The RTC rating of the content.
        rteRating:
          type: string
          description: The RTE rating of the content.
        russiaRating:
          type: string
          description: The Russia rating of the content.
        skfilmRating:
          type: string
          description: The SKFilm rating of the content.
        smaisRating:
          type: string
          description: The SMAIS rating of the content.
        smsaRating:
          type: string
          description: The SMSA rating of the content.
        tvpgRating:
          type: string
          description: The TVPG rating of the content.
        ytRating:
          type: string
          description: The YT rating of the content.
    Status:
      type: object
      description: The status object contains information about the video's uploading, processing, and privacy statuses.
      properties:
        uploadStatus:
          type: string
          description: The status of the uploaded video.
          examples:
            - deleted
            - failed
            - processed
            - rejected
            - uploaded
        failureReason:
          type: string
          description: This value explains why a video failed to upload. This property is only present if the `uploadStatus` property indicates that the upload failed.
          examples:
            - codec
            - conversion
            - emptyFile
            - invalidFile
            - tooSmall
            - uploadAborted
        rejectionReason:
          type: string
          description: This value explains why YouTube rejected an uploaded video. This property is only present if the `uploadStatus` property indicates that the upload was rejected.
          examples:
            - claim
            - copyright
            - duplicate
            - inappropriate
            - legal
            - length
            - termsOfUse
            - trademark
            - uploaderAccountClosed
            - uploaderAccountSuspended
        privacyStatus:
          type: string
          description: The video's privacy status.
          examples:
            - private
            - public
            - unlisted
        publishAt:
          type: string
          format: date-time
          description: |-
            The date and time when the video is scheduled to publish.
            It can be set only if the privacy status of the video is private.
            The value is specified in ISO 8601 format.
            Note the following two additional points about this property's behavior:
            - If you set this property's value when calling the videos.update method, you must also set the status.privacyStatus property value to private even if the video is already private.
            - If your request schedules a video to be published at some time in the past, the video will be published right away. As such, the effect of setting the status.publishAt property to a past date and time is the same as of changing the video's privacyStatus from private to public.
        license:
          type: string
          description: The license of the video.
          examples:
            - creativeCommon
            - youtube
        embeddable:
          type: boolean
          description: This value indicates whether the video can be embedded on another website.
        publicStatsViewable:
          type: boolean
          description: |-
            This value indicates whether the extended video statistics on the video's watch page are publicly viewable.
            By default, those statistics are viewable, and statistics like a video's `viewCount` and ratings will still be publicly visible even if this property's value is set to `false`.
        madeForKids:
          type: boolean
          description: |-
            This value indicates whether the video is designated as child-directed, and it contains the current "made for kids" status of the video.
            For example, the status might be determined based on the value of the `selfDeclaredMadeForKids` property.
        selfDeclaredMadeForKids:
          type: boolean
          description: |-
            In a `videos.insert` or `videos.update` request, this property allows the channel owner to designate the video as being child-directed.
            In a `videos.list` request, the property value is only returned if the channel owner authorized the API request.
    Statistics:
      type: object
      description: The statistics object contains statistics about the video.
      properties:
        viewCount:
          type: integer
          format: int64
          description: The view count of the video.
        likeCount:
          type: integer
          format: int64
          description: The like count of the video.
        dislikeCount:
          type: integer
          format: int64
          description: |-
            The dislike count of the video.
            The `statistics.dislikeCount` property was made private as of December 13, 2021.
            This means that the property is included in an API response only if the API request was authenticated by the video owner.
            See the [revision history](https://developers.google.com/youtube/v3/revision_history#release_notes_12_15_2021) for more information.
        favoriteCount:
          type: integer
          format: int64
          description: |-
            The favorite count of the video.
            This property has been deprecated.
            The deprecation is effective as of August 28, 2015.
            The property's value is now always set to `0`.
          examples:
            - 0
        commentCount:
          type: integer
          format: int64
          description: The comment count of the video.
    Player:
      type: object
      description: The player object contains information that you would use to play the video in an embedded player.
      properties:
        embedHtml:
          type: string
          description: |-
            An `<iframe>` tag that embeds a player that plays the video.
            If the API request to retrieve the resource specifies a value for the maxHeight and/or maxWidth parameters, the size of the embedded player is scaled to satisfy the maxHeight and/or maxWidth requirements.
            If the video's aspect ratio is unknown, the embedded player defaults to a 4:3 format.
        embedHeight:
          type: integer
          format: int64
          description: |-
            The height of the embedded player returned in the `player.embedHtml` property.
            This property is only returned if the request specified a value for the maxHeight and/or maxWidth parameters and the video's aspect ratio is known.
        embedWidth:
          type: integer
          format: int64
          description: |-
            The width of the embedded player returned in the `player.embedHtml` property.
            This property is only returned if the request specified a value for the maxHeight and/or maxWidth parameters and the video's aspect ratio is known.
    TopicDetails:
      type: object
      description: |-
        The topicDetails object encapsulates information about topics associated with the video.
        Important: See the definitions of the `topicDetails.relevantTopicIds[]` and `topicDetails.topicIds[]` properties as well as the [revision history](https://developers.google.com/youtube/v3/revision_history#november-10-2016) for more details about upcoming changes related to topic IDs.
      properties:
        topicIds:
          type: array
          description: |-
            Important: This property has been deprecated as of November 10, 2016.
            The API no longer returns values for this property, and any topics associated with a video are now returned by the `topicDetails.relevantTopicIds[]` property value.
          items:
            type: string
        relevantTopicIds:
          type: array
          description: |-
            A list of topic IDs that are relevant to the video.
            Important: This property has been deprecated as of November 10, 2016. It will be supported until November 10, 2017.
          items:
            type: string
        topicCategories:
          type: array
          description: A list of Wikipedia URLs that provide a high-level description of the video's content.
          items:
            type: string
    RecordingDetails:
      type: object
      description: The recordingDetails object encapsulates information about the location, date and address where the video was recorded.
      properties:
        recordingDate:
          type: string
          format: date-time
          description: The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.
    FileDetails:
      type: object
      description: |-
        The fileDetails object encapsulates information about the video file that was uploaded to YouTube, including the file's resolution, duration, audio and video codecs, stream bitrates, and more.
        This data can only be retrieved by the video owner.
        The fileDetails object will only be returned if the `processingDetails.fileAvailability` property has a value of available.
      properties:
        fileName:
          type: string
          description: The name of the file.
        fileSize:
          type: integer
          format: int64
          description: The size of the file in bytes.
        fileType:
          type: string
          description: |-
            The uploaded file's type as detected by YouTube's video processing engine.
            Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.
            Valid values for this property are:
            - `video` - The file is a known video file type, such as an .mp4 file.
            - `archive` - The file is an archive file, such as a .zip archive.
            - `audio` - The file is a known audio file type, such as an .mp3 file.
            - `document` - The file is a document or text file, such as a MS Word document.
            - `image` - The file is an image file, such as a .jpeg image.
            - `other` - The file is another non-video file type.
            - `project` - The file is a video project file, such as a Microsoft Windows Movie Maker project, that does not contain actual video data.
          examples:
            - video
            - archive
            - audio
            - document
            - image
            - other
            - project
        container:
          type: string
          description: The uploaded video file's container format.
        videoStreams:
          type: array
          description: |-
            A list of video streams contained in the uploaded video file.
            Each item in the list contains detailed metadata about a video stream.
          items:
            type: object
            properties:
              widthPixels:
                type: integer
                format: int32
                description: |-
                  The encoded video content's width in pixels.
                  You can calculate the video's encoding aspect ratio as `width_pixels` / `height_pixels`.
              heightPixels:
                type: integer
                format: int32
                description: The encoded video content's height in pixels.
              frameRateFps:
                type: number
                format: double
                description: The video stream's frame rate, in frames per second.
              aspectRatio:
                type: number
                format: double
                description: The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.
              codec:
                type: string
                description: The video codec that the stream uses.
              bitrateBps:
                type: integer
                format: int64
                description: The video stream's bitrate, in bits per second.
              rotation:
                type: string
                description: |-
                  The amount that YouTube needs to rotate the original source content to properly display the video.
                  Valid values for this property are:
                  - `none` - The video does not need to be rotated.
                  - `clockwise` - The video needs to be rotated 90 degrees clockwise.
                  - `counterClockwise` - The video needs to be rotated 90 degrees counter-clockwise.
                  - `other` - The video needs to be rotated in some other, non-trivial way.
                  - `upsideDown` - The video needs to be rotated upside down.
                examples:
                  - none
                  - clockwise
                  - counterClockwise
                  - other
                  - upsideDown
              vendor:
                type: string
                description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
        audioStreams:
          type: array
          description: |-
            A list of audio streams contained in the uploaded video file.
            Each item in the list contains detailed metadata about an audio stream.
          items:
            type: object
            properties:
              channelCount:
                type: integer
                format: int32
                description: TThe number of audio channels that the stream contains.
              codec:
                type: string
                description: The codec of the audio stream.
              bitrateBps:
                type: integer
                format: int64
                description: The bitrate of the audio stream in bits per second.
              vendor:
                type: string
                description: A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
        durationMs:
          type: integer
          format: int64
          description: The length of the uploaded video in milliseconds.
        bitrateBps:
          type: integer
          format: int64
          description: The uploaded video file's combined (video and audio) bitrate in bits per second.
        creationTime:
          type: string
          description: |-
            The date and time when the uploaded video file was created.
            The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported:
            - Date only: `YYYY-MM-DD`
            - Naive time: `YYYY-MM-DDTHH:MM:SS`
            - Time with timezone: `YYYY-MM-DDTHH:MM:SS+HH:MM`
    ProcessingDetails:
      type: object
      description: |-
        The processingDetails object encapsulates information about YouTube's progress in processing the uploaded video file.
        The properties in the object identify the current processing status and an estimate of the time remaining until YouTube finishes processing the video.
        This part also indicates whether different types of data or content, such as file details or thumbnail images, are available for the video.
        The processingProgress object is designed to be polled so that the video uploaded can track the progress that YouTube has made in processing the uploaded video file.
        This data can only be retrieved by the video owner.
      properties:
        processingStatus:
          type: string
          description: |-
            The video's processing status.
            This value indicates whether YouTube was able to process the video or if the video is still being processed.
            Valid values for this property are:
            - `succeeded` - Video has been successfully processed.
            - `failed` - Video processing has failed. See ProcessingFailureReason.
            - `processing` - Video is currently being processed. See ProcessingProgress.
            - `terminated` - Processing information is no longer available.
          examples:
            - succeeded
            - failed
            - processing
            - terminated
        processingProgress:
          type: object
          description: |-
            The processingProgress object contains information about the progress YouTube has made in processing the video.
            The values are really only relevant if the video's processing status is processing.
          properties:
            partsTotal:
              type: integer
              format: int64
              description: |-
                An estimate of the total number of parts that need to be processed for the video.
                The number may be updated with more precise estimates while YouTube processes the video.
            partsProcessed:
              type: integer
              format: int64
              description: |-
                The number of parts of the video that YouTube has already processed.
                You can estimate the percentage of the video that YouTube has already processed by calculating: `100 * parts_processed / parts_total`
                Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.
            timeLeftMs:
              type: integer
              format: int64
              description: An estimate of the amount of time, in milliseconds, that YouTube needs to finish processing the video.
        processingFailureReason:
          type: string
          description: |-
            The reason that YouTube failed to process the video.
            This property will only have a value if the `processingStatus` property's value is `failed`.
            Valid values for this property are:
            - `other` - Some other processing component has failed.
            - `streamingFailed` - Video could not be sent to streamers.
            - `transcodeFailed` - Content transcoding has failed.
            - `uploadFailed` - File delivery has failed.
        fileDetailsAvailability:
          type: string
          description: |-
            This value indicates whether file details are available for the uploaded video.
            You can retrieve a video's file details by requesting the `fileDetails` part in your `videos.list()` request.
        processingIssuesAvailability:
          type: string
          description: |-
            This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems.
            You can retrieve these suggestions by requesting the `suggestions` part in your `videos.list()` request.
        tagSuggestionsAvailability:
          type: string
          description: |-
            This value indicates whether keyword (tag) suggestions are available for the video.
            Tags can be added to a video's metadata to make it easier for other users to find the video.
            You can retrieve these suggestions by requesting the `suggestions` part in your `videos.list()` request.
        editorSuggestionsAvailability:
          type: string
          description: |-
            This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video.
            You can retrieve these suggestions by requesting the `suggestions` part in your `videos.list()` request.
        thumbnailsAvailability:
          type: string
          description: This value indicates whether thumbnail images have been generated for the video.
    Suggestions:
      type: object
      description: |-
        The suggestions object encapsulates suggestions that identify opportunities to improve the video quality or the metadata for the uploaded video.
        This data can only be retrieved by the video owner.
        The suggestions object will only be returned if the `processingDetails.tagSuggestionsAvailability` property or the `processingDetails.editorSuggestionsAvailability` property has a value of `available`.
      properties:
        processingErrors:
          type: array
          description: |-
            A list of errors that will prevent YouTube from successfully processing the uploaded video.
            These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed.
            Valid values for this property are:
            - `archiveFile` - An archive file (e.g., a ZIP archive).
            - `audioFile` - File contains audio only (e.g., an MP3 file).
            - `docFile` - Document or text file (e.g., MS Word document).
            - `imageFile` - Image file (e.g., a JPEG image).
            - `notAVideoFile` - Other non-video file.
            - `projectFile` - Movie project file (e.g., Microsoft Windows Movie Maker project).
          items:
            type: string
            examples:
              - archiveFile
              - audioFile
              - docFile
              - imageFile
              - notAVideoFile
              - projectFile
        processingWarnings:
          type: array
          description: |-
            A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding.
            These warnings are generated before YouTube actually processes the uploaded video file.
            In addition, they identify issues that do not necessarily indicate that video processing will fail but that still might cause problems such as sync issues, video artifacts, or a missing audio track.
            Valid values for this property are:
            - `hasEditlist` - Edit lists are not currently supported.
            - `inconsistentResolution` - Conflicting container and stream resolutions.
            - `problematicAudioCodec` - Audio codec that is known to cause problems was used.
            - `problematicVideoCodec` - Video codec that is known to cause problems was used.
            - `unknownAudioCodec` - Unrecognized audio codec, transcoding is likely to fail.
            - `unknownContainer` - Unrecognized file format, transcoding is likely to fail.
            - `unknownVideoCodec` - Unrecognized video codec, transcoding is likely to fail.
          items:
            type: string
            examples:
              - hasEditlist
              - inconsistentResolution
              - problematicAudioCodec
              - problematicVideoCodec
              - unknownAudioCodec
              - unknownContainer
              - unknownVideoCodec
        processingHints:
          type: array
          description: |-
            A list of suggestions that may improve YouTube's ability to process the video.
            Valid values for this property are:
            - `nonStreamableMov` - The MP4 file is not streamable, this will slow down the processing.
            - `sendBestQualityVideo` - Probably a better quality version of the video exists.
          items:
            type: string
            examples:
              - nonStreamableMov
              - sendBestQualityVideo
        tagSuggestions:
          type: array
          description: A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.
          items:
            type: object
            properties:
              tag:
                type: string
                description: The keyword tag suggested for the video.
              categoryRestricts:
                type: array
                items:
                  type: string
                description: |-
                  A set of video categories for which the tag is relevant.
                  You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video.
                  By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.
        editorSuggestions:
          type: array
          description: |-
            A list of video editing operations that might improve the video quality or playback experience of the uploaded video.
            Valid values for this property are:
            - `audioQuietAudioSwap` - The audio track appears silent and could be swapped with a better quality one.
            - `videoAutoLevels` - Picture brightness levels seem off and could be corrected.
            - `videoCrop` - Margins (mattes) detected around the picture could be cropped.
            - `videoStabilize` - The video appears shaky and could be stabilized.
          items:
            type: string
            examples:
              - audioQuietAudioSwap
              - videoAutoLevels
              - videoCrop
              - videoStabilize
    LiveStreamingDetails:
      type: object
      description: |-
        The liveStreamingDetails object contains metadata about a live video broadcast.
        The object will only be present in a `video` resource if the video is an upcoming, live, or completed live broadcast.
      properties:
        actualStartTime:
          type: string
          format: date-time
          description: |-
            The time that the broadcast actually started.
            The value is specified in ISO 8601 format.
            This value will not be available until the broadcast begins.
        actualEndTime:
          type: string
          format: date-time
          description: |-
            The time that the broadcast actually ended.
            The value is specified in ISO 8601 format.
            This value will not be available until the broadcast is over.
        scheduledStartTime:
          type: string
          format: date-time
          description: |-
            The time that the broadcast is scheduled to begin.
            The value is specified in ISO 8601 format.
        scheduledEndTime:
          type: string
          format: date-time
          description: |-
            The time that the broadcast is scheduled to end.
            The value is specified in ISO 8601 format.
            If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.
        concurrentViewers:
          type: integer
          format: int64
          description: |-
            The number of viewers currently watching the broadcast.
            The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the `viewCount` for the video.
            Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends.
            So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.
        activeLiveChatId:
          type: string
          description: |-
            The ID of the currently active live chat attached to this video.
            This field is filled only if the video is a currently live broadcast that has live chat.
            Once the broadcast transitions to complete this field will be removed and the live chat closed down.
            For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page.
    Localization:
      type: object
      description: The localizations object contains translations of the video's metadata.
      additionalProperties:
        type: object
        description: The language of the localized text associated with the key value. The value is a string that contains a BCP-47 language code.
        properties:
          title:
            type: string
            description: The localized video title.
          description:
            type: string
            description: The localized video description.

    CaptionList:
      description: |-
        List of caption tracks associated with the specified video.
      type: object
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#captionListResponse`.
          examples:
            - youtube#captionListResponse
        etag:
          type: string
          description: The Etag of this resource.
          examples:
            - "etag"
        items:
          type: array
          description: A list of captions that match the request criteria.
          items:
            $ref: "#/components/schemas/Caption"
    Caption:
      description: |-
        The caption resource represents a YouTube caption track.
        A caption track is associated with a single YouTube video.
        See. [Captions](https://developers.google.com/youtube/v3/docs/captions#resource)
      type: object
      properties:
        kind:
          type: string
          description: Identifies the API resource's type. The value will be `youtube#caption`.
          examples:
            - youtube#caption
        etag:
          type: string
          description: The Etag of this resource.
          examples:
            - "etag"
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the caption track.
          examples:
            - "id"
        snippet:
          type: object
          description: The snippet object contains basic details about the caption.
          properties:
            videoId:
              type: string
              description: The ID that YouTube uses to uniquely identify the video associated with the caption track.
              examples:
                - "videoId"
            lastUpdated:
              type: string
              format: date-time
              description: The date and time when the caption track was last updated. The value is specified in ISO 8601 format.
              examples:
                - "2020-01-23T12:34:56Z"
            trackKind:
              type: string
              description: |-
                The caption track's type.
                Valid values for this property are
                  - `standard` - A regular caption track. This is the default value.
                  - `ASR` - A caption track generated using automatic speech recognition.
                  - `forced` - A caption track that plays when no other track is selected in the player. For example, a video that shows aliens speaking in an alien language might have a forced caption track to only show subtitles for the alien language.
              examples:
                - standard
                - ASR
                - forced
            language:
              type: string
              description: |-
                The language of the caption track.
                The property value is a BCP-47 language tag.
              examples:
                - "ja-JP"
            name:
              type: string
              description: |-
                The name of the caption track.
                The name is intended to be visible to the user as an option during playback.
              examples:
                - "name"
            audioTrackType:
              type: string
              description: |-
                The type of audio track associated with the caption track.
                Valid values for this property are
                - `unknown` - This is the default value.
                - `commentary` - The caption track corresponds to an alternate audio track that includes commentary, such as directory commentary.
                - `descriptive` - The caption track corresponds to an alternate audio track that includes additional descriptive audio.
                - `primary` - The caption track corresponds to the primary audio track for the video, which is the audio track normally associated with the video.
              examples:
                - unknown
                - commentary
                - descriptive
                - primary
            isCC:
              type: boolean
              description: Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is `false`.
              examples:
                - false
            isLarge:
              type: boolean
              description: Indicates whether the caption track uses large text for the vision-impaired. The default value is `false`.
              examples:
                - false
            isEasyReader:
              type: boolean
              description: Indicates whether caption track is formatted for "easy reader," meaning it is at a third-grade level for language learners. The default value is `false`.
              examples:
                - false
            isDraft:
              type: boolean
              description: Indicates whether the caption track is a draft. If the value is `true`, then the track is not publicly visible. The default value is `false`.
              examples:
                - false
            isAutoSynced:
              type: boolean
              description: |-
                Indicates whether YouTube synchronized the caption track to the audio track in the video.
                The value will be `true` if a sync was explicitly requested when the caption track was uploaded.
                For example, when calling the `captions.insert` or `captions.update` methods, you can set the sync parameter to `true` to instruct YouTube to sync the uploaded track to the video.
                If the value is `false`, YouTube uses the time codes in the uploaded caption track to determine when to display captions.
              examples:
                - true
            status:
              type: string
              description: |-
                The caption track's status.
                Valid values for this property are
                - `failed`
                - `serving`
                - `syncing`
              examples:
                - failed
                - serving
                - syncing
            failureReason:
              type: string
              description: |-
                The reason that YouTube failed to process the caption track.
                This property is only present if the state property's value is failed.
                Valid values for this property are
                - `processingFailed` - YouTube failed to process the uploaded caption track.
                - `unknownFormat` - The caption track's format was not recognized.
                - `unsupportedFormat` - The caption track's format is not supported.
              examples:
                - processingFailed
                - unknownFormat
                - unsupportedFormat

  securitySchemes:
    ApiKey:
      type: apiKey
      name: key
      description: API Key Authentication
      in: query

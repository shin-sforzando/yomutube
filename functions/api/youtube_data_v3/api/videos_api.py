# coding: utf-8
"""
    YouTube Data API v3

    See. [YouTube Data API v3](https://developers.google.com/youtube/v3)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501
import io
import warnings
from typing import Any
from typing import Dict
from typing import List
from typing import Optional
from typing import Tuple
from typing import Union

from pydantic import Field
from pydantic import StrictFloat
from pydantic import StrictInt
from pydantic import StrictStr
from pydantic import validate_call

try:
    from typing import Annotated
except ImportError:
    from typing_extensions import Annotated

from pydantic import Field
from typing_extensions import Annotated
from pydantic import StrictStr, field_validator

from typing import List, Optional

from youtube_data_v3.models.video_category_list import VideoCategoryList
from youtube_data_v3.models.video_list import VideoList

from youtube_data_v3.api_client import ApiClient
from youtube_data_v3.api_response import ApiResponse
from youtube_data_v3.rest import RESTResponseType


class VideosApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_call
    def video_categories_list(
        self,
        part: Annotated[
            StrictStr,
            Field(
                description="The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`."
            ),
        ],
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VideoCategoryList:
        """Returns a list of categories that can be associated with YouTube videos.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [VideoCategories:list](https://developers.google.com/youtube/v3/docs/videoCategories/list)

        :param part: The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`. (required)
        :type part: str
        :param id: The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.
        :type id: str
        :param region_code: The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param hl: The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`.
        :type hl: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._video_categories_list_serialize(
            part=part,
            id=id,
            region_code=region_code,
            hl=hl,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoCategoryList",
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def video_categories_list_with_http_info(
        self,
        part: Annotated[
            StrictStr,
            Field(
                description="The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`."
            ),
        ],
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VideoCategoryList]:
        """Returns a list of categories that can be associated with YouTube videos.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [VideoCategories:list](https://developers.google.com/youtube/v3/docs/videoCategories/list)

        :param part: The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`. (required)
        :type part: str
        :param id: The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.
        :type id: str
        :param region_code: The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param hl: The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`.
        :type hl: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._video_categories_list_serialize(
            part=part,
            id=id,
            region_code=region_code,
            hl=hl,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoCategoryList",
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def video_categories_list_without_preload_content(
        self,
        part: Annotated[
            StrictStr,
            Field(
                description="The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`."
            ),
        ],
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a list of categories that can be associated with YouTube videos.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [VideoCategories:list](https://developers.google.com/youtube/v3/docs/videoCategories/list)

        :param part: The part parameter specifies the `videoCategory` resource properties that the API response will include. Set the parameter value to `snippet`. (required)
        :type part: str
        :param id: The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.
        :type id: str
        :param region_code: The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param hl: The hl parameter specifies the language that should be used for text values in the API response. The default value is `en_US`.
        :type hl: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._video_categories_list_serialize(
            part=part,
            id=id,
            region_code=region_code,
            hl=hl,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoCategoryList",
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _video_categories_list_serialize(
        self,
        part,
        id,
        region_code,
        hl,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if part is not None:
            _query_params.append(("part", part))

        if id is not None:
            _query_params.append(("id", id))

        if region_code is not None:
            _query_params.append(("regionCode", region_code))

        if hl is not None:
            _query_params.append(("hl", hl))

        # process the header parameters
        # process the form parameters
        # process the body parameter

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(
            ["application/json"]
        )

        # authentication setting
        _auth_settings: List[str] = ["ApiKey"]

        return self.api_client.param_serialize(
            method="GET",
            resource_path="/videoCategories",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def videos_list(
        self,
        part: Annotated[
            List[StrictStr],
            Field(
                description="he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails`"
            ),
        ],
        chart: Annotated[
            Optional[StrictStr],
            Field(
                description="The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category."
            ),
        ] = None,
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language."
            ),
        ] = None,
        max_height: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        max_results: Annotated[
            Optional[Annotated[int, Field(le=50, strict=True, ge=1)]],
            Field(
                description="The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**."
            ),
        ] = None,
        max_width: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        page_token: Annotated[
            Optional[StrictStr],
            Field(
                description="The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        video_category_id: Annotated[
            Optional[StrictStr],
            Field(
                description="The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VideoList:
        """Returns a list of videos that match the API request parameters.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [Videos:list](https://developers.google.com/youtube/v3/docs/videos/list)

        :param part: he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails` (required)
        :type part: List[str]
        :param chart: The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category.
        :type chart: str
        :param id: The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.
        :type id: str
        :param hl: The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
        :type hl: str
        :param max_height: The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive.
        :type max_height: int
        :param max_results: The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**.
        :type max_results: int
        :param max_width: The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive.
        :type max_width: int
        :param page_token: The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
        :type page_token: str
        :param region_code: The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param video_category_id: The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**.
        :type video_category_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._videos_list_serialize(
            part=part,
            chart=chart,
            id=id,
            hl=hl,
            max_height=max_height,
            max_results=max_results,
            max_width=max_width,
            page_token=page_token,
            region_code=region_code,
            video_category_id=video_category_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoList",
            "400": "object",
            "403": None,
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def videos_list_with_http_info(
        self,
        part: Annotated[
            List[StrictStr],
            Field(
                description="he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails`"
            ),
        ],
        chart: Annotated[
            Optional[StrictStr],
            Field(
                description="The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category."
            ),
        ] = None,
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language."
            ),
        ] = None,
        max_height: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        max_results: Annotated[
            Optional[Annotated[int, Field(le=50, strict=True, ge=1)]],
            Field(
                description="The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**."
            ),
        ] = None,
        max_width: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        page_token: Annotated[
            Optional[StrictStr],
            Field(
                description="The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        video_category_id: Annotated[
            Optional[StrictStr],
            Field(
                description="The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VideoList]:
        """Returns a list of videos that match the API request parameters.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [Videos:list](https://developers.google.com/youtube/v3/docs/videos/list)

        :param part: he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails` (required)
        :type part: List[str]
        :param chart: The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category.
        :type chart: str
        :param id: The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.
        :type id: str
        :param hl: The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
        :type hl: str
        :param max_height: The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive.
        :type max_height: int
        :param max_results: The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**.
        :type max_results: int
        :param max_width: The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive.
        :type max_width: int
        :param page_token: The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
        :type page_token: str
        :param region_code: The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param video_category_id: The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**.
        :type video_category_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._videos_list_serialize(
            part=part,
            chart=chart,
            id=id,
            hl=hl,
            max_height=max_height,
            max_results=max_results,
            max_width=max_width,
            page_token=page_token,
            region_code=region_code,
            video_category_id=video_category_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoList",
            "400": "object",
            "403": None,
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def videos_list_without_preload_content(
        self,
        part: Annotated[
            List[StrictStr],
            Field(
                description="he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails`"
            ),
        ],
        chart: Annotated[
            Optional[StrictStr],
            Field(
                description="The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category."
            ),
        ] = None,
        id: Annotated[
            Optional[StrictStr],
            Field(
                description="The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID."
            ),
        ] = None,
        hl: Annotated[
            Optional[StrictStr],
            Field(
                description="The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language."
            ),
        ] = None,
        max_height: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        max_results: Annotated[
            Optional[Annotated[int, Field(le=50, strict=True, ge=1)]],
            Field(
                description="The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**."
            ),
        ] = None,
        max_width: Annotated[
            Optional[Annotated[int, Field(le=8192, strict=True, ge=72)]],
            Field(
                description="The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive."
            ),
        ] = None,
        page_token: Annotated[
            Optional[StrictStr],
            Field(
                description="The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter."
            ),
        ] = None,
        region_code: Annotated[
            Optional[StrictStr],
            Field(
                description="The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code."
            ),
        ] = None,
        video_category_id: Annotated[
            Optional[StrictStr],
            Field(
                description="The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**."
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a list of videos that match the API request parameters.

        Quota impact: A call to this method has a quota cost of **1** unit. See. [Videos:list](https://developers.google.com/youtube/v3/docs/videos/list)

        :param part: he part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value. - `contentDetails` - `fileDetails` - `id` - `liveStreamingDetails` - `localizations` - `player` - `processingDetails` - `recordingDetails` - `snippet` - `statistics` - `status` - `suggestions` - `topicDetails` (required)
        :type part: List[str]
        :param chart: The chart parameter identifies the chart that you want to retrieve. Acceptable values are - `mostPopular` - Return the most popular videos for the specified content region and video category.
        :type chart: str
        :param id: The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.
        :type id: str
        :param hl: The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.
        :type hl: str
        :param max_height: The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are `72` to `8192`, inclusive.
        :type max_height: int
        :param max_results: The maxResults parameter specifies the maximum number of items that should be returned in the result set. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are `1` to `50`, inclusive. The default value is **5**.
        :type max_results: int
        :param max_width: The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are `72` to `8192`, inclusive.
        :type max_width: int
        :param page_token: The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.
        :type page_token: str
        :param region_code: The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the `chart` parameter. The parameter value is an ISO 3166-1 alpha-2 country code.
        :type region_code: str
        :param video_category_id: The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is **0**.
        :type video_category_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._videos_list_serialize(
            part=part,
            chart=chart,
            id=id,
            hl=hl,
            max_height=max_height,
            max_results=max_results,
            max_width=max_width,
            page_token=page_token,
            region_code=region_code,
            video_category_id=video_category_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "VideoList",
            "400": "object",
            "403": None,
            "404": "object",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _videos_list_serialize(
        self,
        part,
        chart,
        id,
        hl,
        max_height,
        max_results,
        max_width,
        page_token,
        region_code,
        video_category_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:
        _host = None

        _collection_formats: Dict[str, str] = {
            "part": "multi",
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if part is not None:
            _query_params.append(("part", part))

        if chart is not None:
            _query_params.append(("chart", chart))

        if id is not None:
            _query_params.append(("id", id))

        if hl is not None:
            _query_params.append(("hl", hl))

        if max_height is not None:
            _query_params.append(("maxHeight", max_height))

        if max_results is not None:
            _query_params.append(("maxResults", max_results))

        if max_width is not None:
            _query_params.append(("maxWidth", max_width))

        if page_token is not None:
            _query_params.append(("pageToken", page_token))

        if region_code is not None:
            _query_params.append(("regionCode", region_code))

        if video_category_id is not None:
            _query_params.append(("videoCategoryId", video_category_id))

        # process the header parameters
        # process the form parameters
        # process the body parameter

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(
            ["application/json"]
        )

        # authentication setting
        _auth_settings: List[str] = ["ApiKey"]

        return self.api_client.param_serialize(
            method="GET",
            resource_path="/videos",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )
